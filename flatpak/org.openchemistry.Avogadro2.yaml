app-id: org.openchemistry.Avogadro2
runtime: org.kde.Platform
sdk: org.kde.Sdk
runtime-version: "6.8"
command: avogadro2
appdata-license: BSD-3-Clause AND GPL-2.0-only
finish-args:
  - --socket=wayland
  - --socket=fallback-x11  # To support X11
  - --share=ipc  # Bad performance on X11 without
  - --device=dri  # OpenGL rendering
  - --share=network  # For plugin downloads
cleanup:
  - /lib/cmake
  - '*.la'
  - '*.a'

modules:
  # Needed to compile glew apparently
  - shared-modules/glu/glu-9.json

  # Open Babel is broken without patched rapidjson
  - name: rapidjson
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      - -DRAPIDJSON_BUILD_DOC=OFF
      - -DRAPIDJSON_BUILD_EXAMPLES=OFF
      - -DRAPIDJSON_BUILD_TESTS=OFF
    sources:
      - type: git
        url: https://github.com/Tencent/rapidjson.git
        # Commit used was simply most recent at the time of writing
        # Would rather use 4d6cb08189cf7336821f04090b612baa2ca6a90d (same commit as openSUSE
        # Tumbleweed) as known to be good, but older commits like that don't seem to compile
        commit: 7c73dd7de7c4f14379b781418c6e947ad464c818
        
  - name: openbabel
    buildsystem: cmake-ninja
    builddir: true
    config-opts:
      # Match the way Avogadro builds Open Babel
      - -DCMAKE_BUILD_TYPE=Release
      - -DENABLE_TESTS=OFF
      - -DBUILD_GUI=OFF
      - -DOPTIMIZE_NATIVE=OFF
      - -DOB_USE_PREBUILT_BINARIES=OFF
      - -DENABLE_VERSIONED_FORMATS=OFF
      - -DWITH_JSON=ON
      - -DWITH_COORDGEN=OFF
      - -DWITH_MAEPARSER=OFF
    sources:
      - type: git
        url: https://github.com/openbabel/openbabel.git
        commit: 32cf131444c1555c749b356dab44fb9fe275271f

  - name: avogadro2
    buildsystem: cmake-ninja
    builddir: true  # Build outside of source tree, just like other builds
    no-make-install: true  # Superbuild doesn't have `install` command defined
    config-opts:
      # Match GitHub builds as much as possible, which generally means using defaults
      - -DCMAKE_BUILD_TYPE=Debug
      - -DBUILD_GPL_PLUGINS=ON
      - -DBUILD_MOLEQUEUE=OFF
      - -DQT_VERSION=6
      - -DDOWNLOAD_TO_SOURCE_DIR=ON
      - -DUSE_SYSTEM_OPENBABEL=ON
    sources:
      # Avogadro stuff all already collected together as part of GitHub Actions
      # This means that if using this to build the Flatpak locally, the openchemistry repo and
      # its submodules must be cloned into ./openchemistry in advance of running flatpak-builder
      # with this manifest
      - type: dir
        path: openchemistry

      # Now fetch third-party stuff where the source is expected in `openchemistry/thirdparty`
      # JKQtPlotter
      - type: archive
        url: https://github.com/jkriege2/JKQtPlotter/archive/5fd8951edc73a077096c84c5a4474c29f239ed66.tar.gz
        sha256: 0deba5af19525f5411b12064c79469337651268b22d48e39fda469303b38539a
        dest: thirdparty/jkqtplotter
      
      # Other third-party sources would normally be downloaded by Avogadro build on the fly
      # Flatpaks aren't allowed network access during build so have to download source archives
      # ahead of time to download_dir (which we've indicated using `-DDOWNLOAD_TO_SOURCE_DIR=ON`)
      # Match order in projects.cmake
      # glew
      # (Should be able to use shared module but not picked up for whatever reason)
      - type: file
        url: https://github.com/nigels-com/glew/releases/download/glew-2.2.0/glew-2.2.0.tgz
        sha256: d4fc82893cfb00109578d0a1a2337fb8ca335b3ceccf97b97e5cc7f08e4353e1
        dest: Downloads
      # Eigen3
      - type: file
        url: https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz
        sha256: 8586084f71f9bde545ee7fa6d00288b264a2b7ac3607b974e54d13e7162c1c72
        dest: Downloads
      # OpenBabel
      - type: file
        url: https://github.com/openbabel/openbabel/archive/32cf131444c1555c749b356dab44fb9fe275271f.tar.gz
        sha256: 7b471015df510b30057b8356f42729a35dfd1f4fa85f205c56bbaf3c64e85071
        dest: Downloads
      # spglib
      - type: file
        url: https://github.com/spglib/spglib/archive/v2.5.0.tar.gz
        sha256: b6026f5e85106c0c9ee57e54b9399890d0f29982e20e96ede0428b3efbe6b914
        dest: Downloads
      # libarchive
      - type: file
        url: https://github.com/libarchive/libarchive/archive/v3.7.7.tar.gz
        sha256: fa62384995e8aa4f5a901c184fb5c91e56a29e24c05b6881a7f8fd5bbea694d2
        dest: Downloads
      # msgpackc
      - type: file
        url: https://github.com/msgpack/msgpack-c/releases/download/cpp-3.3.0/msgpack-3.3.0.tar.gz
        sha256: 6e114d12a5ddb8cb11f669f83f32246e484a8addd0ce93f274996f1941c1f07b
        dest: Downloads
      # mmtf-cpp
      - type: file
        url: https://github.com/rcsb/mmtf-cpp/archive/refs/tags/v1.1.0.tar.gz
        sha256: 021173bdc1814b1d0541c4426277d39df2b629af53151999b137e015418f76c0
        dest: Downloads
      # libmsym
      - type: file
        url: https://github.com/mcodev31/libmsym/archive/85e47232376a8e735c2a7b5283f40b59b3953db1.tar.gz
        sha256: 456e2c1e0c78e212115d4d332f557f108b6d41b730d5fd6639c2452df31b7096
        dest: Downloads

    post-install:
      # Manually copy contents of prefix dir over into main build dir
      # -a option is recursive, should preserve permissions and symlinks
      - cp -a prefix/bin -t ${FLATPAK_DEST}/
      - cp -a prefix/lib -t ${FLATPAK_DEST}/
      - cp -a prefix/lib64/* -t ${FLATPAK_DEST}/lib/  # Merge with lib
      - ln -rs ${FLATPAK_DEST}/lib ${FLATPAK_DEST}/lib64  # Add a symlink so plugins get found
      - cp -a prefix/share -t ${FLATPAK_DEST}/
